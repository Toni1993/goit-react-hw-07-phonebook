{"version":3,"sources":["components/ContactForm/ContactForm.stylad.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.stylad.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Box.js","redux/contactsOperation.js","redux/contactsSlice.js","components/App.js","redux/store.js","index.js"],"names":["FormLable","styled","label","FormButton","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","value","onChange","currentTarget","type","pattern","title","required","List","ul","Item","li","ItemText","p","Button","ContactItem","id","onDeleteContact","onClick","ContactList","contacts","map","FilterLabel","FilteInput","input","Filter","placeholder","Box","color","space","layout","flexbox","grid","background","border","position","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","thunkApi","a","get","data","rejectWithValue","addContact","contact","post","message","deleteContact","delete","getContacts","state","items","getFilterContacts","filter","isLoading","contactsSlice","createSlice","initialState","error","reducers","changeFilter","action","payload","extraReducers","pending","fulfilled","rejected","item","actions","addContactList","removeContact","App","dispatch","useDispatch","useSelector","isLoadingContacts","isExistontacts","Boolean","length","useEffect","ml","mr","textAlign","uuidv4","normolizedName","toLowerCase","find","alert","event","style","display","justifyContent","normalizedFilter","includes","getVisibleContacts","contactId","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf55e0ce.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormLable = styled.label`\n\tfont-size: 20px;\n\tmargin: 10px;\n\tpadding: 5px;\n\ttext-decoration: solid;\n\tcolor: rgb(107, 41, 41);\n`;\n\nexport const FormButton = styled.button`\n\tmargin-left: 20px;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import { FormLable } from './ContactForm.stylad';\nimport { FormButton } from './ContactForm.stylad';\n\nimport { useState } from 'react';\n\nfunction ContactForm({ onSubmit }) {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\n\tconst addContactOnSubmit = e => {\n\t\te.preventDefault();\n\t\tonSubmit({ name, number });\n\t\treset();\n\t};\n\tconst handleChangeName = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tsetName(value);\n\t};\n\tconst handleChangeNumber = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tsetNumber(value);\n\t};\n\tconst reset = () => {\n\t\tsetName('');\n\t\tsetNumber('');\n\t};\n\treturn (\n\t\t<form onSubmit={addContactOnSubmit}>\n\t\t\t<FormLable>\n\t\t\t\tName:\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={handleChangeName}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</FormLable>\n\n\t\t\t<FormLable>\n\t\t\t\tTel:\n\t\t\t\t<input\n\t\t\t\t\tvalue={number}\n\t\t\t\t\tonChange={handleChangeNumber}\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"number\"\n\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</FormLable>\n\t\t\t<FormButton type=\"submit\">Add contact</FormButton>\n\t\t</form>\n\t);\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\twidth: 740px;\n\ttext-decoration: none;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\tmargin: 10px;\n\tdisplay: inline-flex;\n\twidth: 330px;\n\ttext-decoration: underline;\n`;\n\nexport const ItemText = styled.p`\n\tmargin-left: 10px;\n\tcolor: rgb(67, 69, 219);\n`;\n\nexport const Button = styled.button`\n\tmargin-left: auto;\n\ttext-align: center;\n\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactItem.stylad';\nimport { ItemText } from './ContactItem.stylad';\nimport { Button } from './ContactItem.stylad';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n\t<Item>\n\t\t<ItemText>{name}</ItemText>\n\t\t<ItemText>{number}</ItemText>\n\t\t<Button onClick={() => onDeleteContact(id)}>Delete</Button>\n\t</Item>\n);\n\nContactItem.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tnumber: PropTypes.string.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n\t<List>\n\t\t{contacts.map(({ id, name, number }) => (\n\t\t\t<ContactItem\n\t\t\t\tkey={id}\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\tnumber={number}\n\t\t\t\tonDeleteContact={onDeleteContact}\n\t\t\t/>\n\t\t))}\n\t</List>\n);\n\nContactList.propTypes = {\n\tcontacts: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tnumber: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n\tcolor: rgb(233, 80, 80);\n\ttext-align: center;\n`;\n\nexport const FilteInput = styled.input`\n\ttext-align: center;\n\tmargin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterLabel } from './Filter.styled';\nimport { FilteInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n\t<FilterLabel>\n\t\tFind contacts by name\n\t\t<FilteInput\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tplaceholder=\"Name contact\"\n\t\t/>\n\t</FilterLabel>\n);\n\nFilter.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport {\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://630b7efaf280658a59dc70e2.mockapi.io/';\n\nexport const fetchContacts = createAsyncThunk(\n\t'contacts/fetchContacts',\n\tasync (_, thunkApi) => {\n\t\ttry {\n\t\t\tconst contacts = await axios.get('/contacts');\n\t\t\treturn contacts.data;\n\t\t} catch (error) {\n\t\t\treturn thunkApi.rejectWithValue(error);\n\t\t}\n\t},\n);\n\nexport const addContact = createAsyncThunk(\n\t'contact/addContact',\n\tasync (contact, thunkApi) => {\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/contacts', contact);\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\treturn thunkApi.rejectWithValue(error.message);\n\t\t}\n\t},\n);\n\nexport const deleteContact = createAsyncThunk(\n\t'contacts/deleteContact',\n\tasync (id, thunkApi) => {\n\t\ttry {\n\t\t\tawait axios.delete(`/contacts/${id}`);\n\t\t\treturn id;\n\t\t} catch (error) {\n\t\t\treturn thunkApi.rejectWithValue(error);\n\t\t}\n\t},\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, fetchContacts } from './contactsOperation';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilterContacts = state => state.contacts.filter;\nexport const isLoading = state => state.contacts.isLoading;\n\nconst contactsSlice = createSlice({\n\tname: 'contacts',\n\tinitialState: {\n\t\titems: [],\n\t\tfilter: '',\n\t\tisLoading: false,\n\t\terror: null,\n\t},\n\treducers: {\n\t\tchangeFilter(state, action) {\n\t\t\tstate.filter = action.payload;\n\t\t},\n\t},\n\textraReducers: {\n\t\t[addContact.pending]: state => {\n\t\t\tstate.isLoading = true;\n\t\t},\n\t\t[addContact.fulfilled]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.items = [...state.items, payload];\n\t\t},\n\t\t[addContact.rejected]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = payload;\n\t\t},\n\t\t[deleteContact.pending]: state => {\n\t\t\tstate.isLoading = true;\n\t\t},\n\t\t[deleteContact.fulfilled]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.items = state.items.filter(item => item.id !== payload);\n\t\t},\n\t\t[deleteContact.rejected]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = payload;\n\t\t},\n\t\t[fetchContacts.pending]: state => {\n\t\t\tstate.isLoading = true;\n\t\t},\n\t\t[fetchContacts.fulfilled]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.items = [...payload];\n\t\t},\n\t\t[fetchContacts.rejected]: (state, { payload }) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = payload;\n\t\t},\n\t},\n});\n\nexport const { addContactList, removeContact, changeFilter } =\n\tcontactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from './Box';\nimport { useEffect } from 'react';\nimport { Puff } from 'react-loader-spinner';\n\nimport { useDispatch, useSelector } from 'react-redux/';\nimport {\n\tgetContacts,\n\tchangeFilter,\n\tisLoading,\n\tgetFilterContacts,\n} from '../redux/contactsSlice';\nimport {\n\tfetchContacts,\n\tdeleteContact,\n\taddContact,\n} from 'redux/contactsOperation';\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(getContacts);\n\tconst filter = useSelector(getFilterContacts);\n\tconst isLoadingContacts = useSelector(isLoading);\n\tconst isExistontacts = useSelector(state =>\n\t\tBoolean(state.contacts.items.length),\n\t);\n\n\tuseEffect(\n\t\t() => !isExistontacts && dispatch(fetchContacts()),\n\t\t[dispatch, isExistontacts],\n\t);\n\n\tconst addContactOnsubmit = ({ name, number }) => {\n\t\tconst contact = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t};\n\n\t\tconst normolizedName = name.toLowerCase();\n\t\tif (\n\t\t\tcontacts.find(contact => contact.name.toLowerCase() === normolizedName)\n\t\t) {\n\t\t\treturn alert(`${name} is already in contacts`);\n\t\t}\n\n\t\tdispatch(addContact(contact));\n\t};\n\n\tconst handleFilter = event => {\n\t\tdispatch(changeFilter(event.currentTarget.value));\n\t};\n\n\tconst getVisibleContacts = () => {\n\t\tconst normalizedFilter = filter.toLowerCase();\n\n\t\treturn contacts.filter(contact => {\n\t\t\treturn contact.name.toLowerCase().includes(normalizedFilter);\n\t\t});\n\t};\n\n\tconst fordDeleteContact = contactId => {\n\t\tdispatch(deleteContact(contactId));\n\t};\n\n\treturn (\n\t\t<Box ml=\"auto\" mr=\"auto\">\n\t\t\t<Box textAlign=\"center\">\n\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t<ContactForm onSubmit={addContactOnsubmit} />\n\n\t\t\t\t<h2>Contacts </h2>\n\t\t\t\t<Filter value={filter} onChange={handleFilter} />\n\t\t\t\t{isLoadingContacts && (\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center' }}>\n\t\t\t\t\t\t<Puff color=\"rgb(234 95 95)\" />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<ContactList\n\t\t\t\t\tcontacts={getVisibleContacts()}\n\t\t\t\t\tonDeleteContact={fordDeleteContact}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsSlice from './contactsSlice';\n\nconst store = configureStore({\n\treducer: {\n\t\tcontacts: contactsSlice,\n\t},\n\tmiddleware: getDefaultMiddleware => getDefaultMiddleware().concat(),\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}