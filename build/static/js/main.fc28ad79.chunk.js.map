{"version":3,"sources":["components/ContactForm/ContactForm.stylad.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.stylad.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Box.js","components/redux/contactsSlice.js","components/App.js","components/redux/store.js","index.js"],"names":["FormLable","styled","label","FormButton","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","value","onChange","currentTarget","type","pattern","title","required","List","ul","Item","li","ItemText","p","Button","ContactItem","id","onDeleteContact","onClick","ContactList","contacts","map","FilterLabel","FilteInput","input","Filter","placeholder","Box","color","space","layout","flexbox","grid","background","border","position","getContacts","state","items","getFilterContacts","filter","contactsSlice","createSlice","initialState","reducers","addContactList","action","payload","removeContact","item","changeFilter","actions","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","reducer","App","dispatch","useDispatch","useSelector","display","alignItems","flexDirection","contact","uuidv4","normolizedName","toLowerCase","find","alert","event","normalizedFilter","console","log","includes","getVisibleContacts","contactId","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fc28ad79.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormLable = styled.label`\n\tfont-size: 20px;\n\tmargin: 10px;\n\tpadding: 5px;\n\ttext-decoration: solid;\n\tcolor: rgb(107, 41, 41);\n`;\n\nexport const FormButton = styled.button`\n\tmargin-left: 20px;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import { FormLable } from './ContactForm.stylad';\nimport { FormButton } from './ContactForm.stylad';\n\nimport { useState } from 'react';\n\nfunction ContactForm({ onSubmit }) {\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\n\tconst addContact = e => {\n\t\te.preventDefault();\n\t\tonSubmit({ name, number });\n\t\treset();\n\t};\n\tconst handleChangeName = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tsetName(value);\n\t};\n\tconst handleChangeNumber = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tsetNumber(value);\n\t};\n\tconst reset = () => {\n\t\tsetName('');\n\t\tsetNumber('');\n\t};\n\treturn (\n\t\t<form onSubmit={addContact}>\n\t\t\t<FormLable>\n\t\t\t\tName:\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={handleChangeName}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</FormLable>\n\n\t\t\t<FormLable>\n\t\t\t\tTel:\n\t\t\t\t<input\n\t\t\t\t\tvalue={number}\n\t\t\t\t\tonChange={handleChangeNumber}\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"number\"\n\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</FormLable>\n\t\t\t<FormButton type=\"submit\">Add contact</FormButton>\n\t\t</form>\n\t);\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\ttext-decoration: none;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\tmargin: 10px;\n\ttext-decoration: underline;\n`;\n\nexport const ItemText = styled.p`\n\tcolor: rgb(67, 69, 219);\n`;\n\nexport const Button = styled.button`\n\ttext-align: center;\n\tborder-radius: 10px;\n\tpadding: 5px 15px;\n\tbackground-color: rgb(236, 145, 145);\n\tcursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactItem.stylad';\nimport { ItemText } from './ContactItem.stylad';\nimport { Button } from './ContactItem.stylad';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n\t<Item>\n\t\t<ItemText>{name}</ItemText>\n\t\t<ItemText>{number}</ItemText>\n\t\t<Button onClick={() => onDeleteContact(id)}>Delete</Button>\n\t</Item>\n);\n\nContactItem.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tnumber: PropTypes.string.isRequired,\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n\t<List>\n\t\t{contacts.map(({ id, name, number }) => (\n\t\t\t<ContactItem\n\t\t\t\tkey={id}\n\t\t\t\tid={id}\n\t\t\t\tname={name}\n\t\t\t\tnumber={number}\n\t\t\t\tonDeleteContact={onDeleteContact}\n\t\t\t/>\n\t\t))}\n\t</List>\n);\n\nContactList.propTypes = {\n\tcontacts: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tnumber: PropTypes.string.isRequired,\n\t\t}),\n\t),\n\tonDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n\tcolor: rgb(233, 80, 80);\n\ttext-align: center;\n`;\n\nexport const FilteInput = styled.input`\n\ttext-align: center;\n\tmargin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterLabel } from './Filter.styled';\nimport { FilteInput } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n\t<FilterLabel>\n\t\tFind contacts by name\n\t\t<FilteInput\n\t\t\ttype=\"text\"\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tplaceholder=\"Name contact\"\n\t\t/>\n\t</FilterLabel>\n);\n\nFilter.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport {\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n\tcolor,\n\tspace,\n\tlayout,\n\tflexbox,\n\tgrid,\n\tbackground,\n\tborder,\n\tposition,\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilterContacts = state => state.contacts.filter;\n\nconst initialItems = [\n\t{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n\t{ id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n\t{ id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n\t{ id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contactsSlice = createSlice({\n\tname: 'contacts',\n\tinitialState: { items: initialItems, filter: '' },\n\treducers: {\n\t\taddContactList: (state, action) => {\n\t\t\tstate.items = [...state.items, action.payload];\n\t\t},\n\t\tremoveContact: (state, action) => {\n\t\t\tstate.items = state.items.filter(item => item.id !== action.payload);\n\t\t},\n\t\tchangeFilter(state, action) {\n\t\t\tstate.filter = action.payload;\n\t\t},\n\t},\n});\n\nexport const { addContactList, removeContact, changeFilter } =\n\tcontactsSlice.actions;\n\nconst persistConfig = {\n\tkey: 'contacts',\n\tstorage,\n\twhitelist: ['items'],\n};\n\nexport const persistedReducer = persistReducer(\n\tpersistConfig,\n\tcontactsSlice.reducer,\n);\n","import { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from './Box';\n\nimport { useDispatch, useSelector } from 'react-redux/';\nimport {\n\taddContactList,\n\tgetContacts,\n\tchangeFilter,\n\tremoveContact,\n\tgetFilterContacts,\n} from '../components/redux/contactsSlice';\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(getContacts);\n\tconst filter = useSelector(getFilterContacts);\n\n\tconst addContact = ({ name, number }) => {\n\t\tconst contact = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\tnumber,\n\t\t};\n\n\t\tconst normolizedName = name.toLowerCase();\n\t\tif (\n\t\t\tcontacts.find(contact => contact.name.toLowerCase() === normolizedName)\n\t\t) {\n\t\t\treturn alert(`${name} is already in contacts`);\n\t\t}\n\n\t\tdispatch(addContactList(contact));\n\t};\n\n\tconst handleFilter = event => {\n\t\tdispatch(changeFilter(event.currentTarget.value));\n\t};\n\n\tconst getVisibleContacts = () => {\n\t\tconst normalizedFilter = filter.toLowerCase();\n\t\tconsole.log(contacts);\n\t\treturn contacts.filter(contact => {\n\t\t\tconsole.log(contact);\n\t\t\treturn contact.name.toLowerCase().includes(normalizedFilter);\n\t\t});\n\t};\n\n\tconst deleteContact = contactId => {\n\t\tdispatch(removeContact(contactId));\n\t};\n\n\treturn (\n\t\t<Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n\t\t\t<Box>\n\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t<ContactForm onSubmit={addContact} />\n\t\t\t\t<h2>Contacts </h2>\n\t\t\t\t<Filter value={filter} onChange={handleFilter} />\n\t\t\t\t<ContactList\n\t\t\t\t\tcontacts={getVisibleContacts()}\n\t\t\t\t\tonDeleteContact={deleteContact}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { persistedReducer } from './contactsSlice';\nimport {\n\tpersistStore,\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist';\n\nexport const store = configureStore({\n\treducer: {\n\t\tcontacts: persistedReducer,\n\t},\n\tmiddleware: getDefaultMiddleware =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: {\n\t\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t\t},\n\t\t}),\n});\nconsole.log();\nexport const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { persistor } from './components/redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}